DEFINE
    d_closed := 0;
    d_opening := 1;
    d_open := 2;
    d_closing := 3;
    elevator_pos__1 := __COND_0 ? (elevator_pos + 1) : elevator_pos;
    elevator_pos__2 := __COND_1 ? (elevator_pos__1 - 1) : elevator_pos__1;
    elevator_pos__3 := __COND_2 ? 6 : elevator_pos__2;
    elevator_pos__4 := __COND_3 ? 0 : elevator_pos__3;
    on_floor__0__1 := (elevator_pos__4 = 0);
    door_state__0__1 := __COND_4 & __COND_5 ? d_opening : door_state[0];
    door_state__0__2 := __COND_4 & !__COND_5 ? d_open : door_state__0__1;
    door_state__0__3 := !__COND_4 & __COND_6 ? d_closing : door_state__0__2;
    door_state__0__4 := !__COND_4 & !__COND_6 ? d_closed : door_state__0__3;
    door_closed__0__1 := (door_state__0__4 = d_closed);
    door_open__0__1 := (door_state__0__4 = d_open);
    button__0__1 := __COND_7 ? FALSE : button[0];
    call__0__1 := __COND_7 ? FALSE : call[0];
    button__0__2 := !__COND_7 ? (button__0__1 | next(user_floor_button[0])) : button__0__1;
    call__0__2 := !__COND_7 ? (call__0__1 | next(user_cabin_button[0])) : call__0__1;
    on_floor__1__1 := (elevator_pos__4 = 3);
    door_state__1__1 := __COND_8 & __COND_9 ? d_opening : door_state[1];
    door_state__1__2 := __COND_8 & !__COND_9 ? d_open : door_state__1__1;
    door_state__1__3 := !__COND_8 & __COND_10 ? d_closing : door_state__1__2;
    door_state__1__4 := !__COND_8 & !__COND_10 ? d_closed : door_state__1__3;
    door_closed__1__1 := (door_state__1__4 = d_closed);
    door_open__1__1 := (door_state__1__4 = d_open);
    button__1__1 := __COND_11 ? FALSE : button[1];
    call__1__1 := __COND_11 ? FALSE : call[1];
    button__1__2 := !__COND_11 ? (button__1__1 | next(user_floor_button[1])) : button__1__1;
    call__1__2 := !__COND_11 ? (call__1__1 | next(user_cabin_button[1])) : call__1__1;
    on_floor__2__1 := (elevator_pos__4 = 6);
    door_state__2__1 := __COND_12 & __COND_13 ? d_opening : door_state[2];
    door_state__2__2 := __COND_12 & !__COND_13 ? d_open : door_state__2__1;
    door_state__2__3 := !__COND_12 & __COND_14 ? d_closing : door_state__2__2;
    door_state__2__4 := !__COND_12 & !__COND_14 ? d_closed : door_state__2__3;
    door_closed__2__1 := (door_state__2__4 = d_closed);
    door_open__2__1 := (door_state__2__4 = d_open);
    button__2__1 := __COND_15 ? FALSE : button[2];
    call__2__1 := __COND_15 ? FALSE : call[2];
    button__2__2 := !__COND_15 ? (button__2__1 | next(user_floor_button[2])) : button__2__1;
    call__2__2 := !__COND_15 ? (call__2__1 | next(user_cabin_button[2])) : call__2__1;
    __COND_0 := up;
    __COND_1 := down;
    __COND_2 := (elevator_pos__2 > 6);
    __COND_3 := (elevator_pos__3 < 0);
    __COND_4 := open[0];
    __COND_5 := ((door_state[0] = d_closed) | (door_state[0] = d_closing));
    __COND_6 := ((door_state__0__2 = d_open) | (door_state__0__2 = d_opening));
    __COND_7 := (on_floor__0__1 & door_open__0__1);
    __COND_8 := open[1];
    __COND_9 := ((door_state[1] = d_closed) | (door_state[1] = d_closing));
    __COND_10 := ((door_state__1__2 = d_open) | (door_state__1__2 = d_opening));
    __COND_11 := (on_floor__1__1 & door_open__1__1);
    __COND_12 := open[2];
    __COND_13 := ((door_state[2] = d_closed) | (door_state[2] = d_closing));
    __COND_14 := ((door_state__2__2 = d_open) | (door_state__2__2 = d_opening));
    __COND_15 := (on_floor__2__1 & door_open__2__1);
ASSIGN
    next(on_floor[0]) := on_floor__0__1;
    next(on_floor[1]) := on_floor__1__1;
    next(on_floor[2]) := on_floor__2__1;
    next(door_closed[0]) := door_closed__0__1;
    next(door_closed[1]) := door_closed__1__1;
    next(door_closed[2]) := door_closed__2__1;
    next(door_open[0]) := door_open__0__1;
    next(door_open[1]) := door_open__1__1;
    next(door_open[2]) := door_open__2__1;
    next(button[0]) := button__0__2;
    next(button[1]) := button__1__2;
    next(button[2]) := button__2__2;
    next(call[0]) := call__0__2;
    next(call[1]) := call__1__2;
    next(call[2]) := call__2__2;
    next(elevator_pos) := elevator_pos__4;
    next(door_state[0]) := door_state__0__4;
    next(door_state[1]) := door_state__1__4;
    next(door_state[2]) := door_state__2__4;

