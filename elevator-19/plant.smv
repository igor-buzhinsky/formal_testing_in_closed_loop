ASSIGN
    next(elevator_pos) := elevator_pos3;
    next(on_floor[0]) := next(elevator_pos) = 3 * 0;
    next(on_floor[1]) := next(elevator_pos) = 3 * 1;
    next(on_floor[2]) := next(elevator_pos) = 3 * 2;
    next(on_floor[3]) := next(elevator_pos) = 3 * 3;
    next(on_floor[4]) := next(elevator_pos) = 3 * 4;
    next(on_floor[5]) := next(elevator_pos) = 3 * 5;
    next(on_floor[6]) := next(elevator_pos) = 3 * 6;
    next(on_floor[7]) := next(elevator_pos) = 3 * 7;
    next(on_floor[8]) := next(elevator_pos) = 3 * 8;
    next(on_floor[9]) := next(elevator_pos) = 3 * 9;
    next(on_floor[10]) := next(elevator_pos) = 3 * 10;
    next(on_floor[11]) := next(elevator_pos) = 3 * 11;
    next(on_floor[12]) := next(elevator_pos) = 3 * 12;
    next(on_floor[13]) := next(elevator_pos) = 3 * 13;
    next(on_floor[14]) := next(elevator_pos) = 3 * 14;
    next(on_floor[15]) := next(elevator_pos) = 3 * 15;
    next(on_floor[16]) := next(elevator_pos) = 3 * 16;
    next(on_floor[17]) := next(elevator_pos) = 3 * 17;
    next(on_floor[18]) := next(elevator_pos) = 3 * 18;
    next(door_state[0]) := open[0] ? (door_state[0] in { d_closed, d_closing } ? d_opening : d_open) : (door_state[0] in { d_open, d_opening } ? d_closing : d_closed);
    next(door_state[1]) := open[1] ? (door_state[1] in { d_closed, d_closing } ? d_opening : d_open) : (door_state[1] in { d_open, d_opening } ? d_closing : d_closed);
    next(door_state[2]) := open[2] ? (door_state[2] in { d_closed, d_closing } ? d_opening : d_open) : (door_state[2] in { d_open, d_opening } ? d_closing : d_closed);
    next(door_state[3]) := open[3] ? (door_state[3] in { d_closed, d_closing } ? d_opening : d_open) : (door_state[3] in { d_open, d_opening } ? d_closing : d_closed);
    next(door_state[4]) := open[4] ? (door_state[4] in { d_closed, d_closing } ? d_opening : d_open) : (door_state[4] in { d_open, d_opening } ? d_closing : d_closed);
    next(door_state[5]) := open[5] ? (door_state[5] in { d_closed, d_closing } ? d_opening : d_open) : (door_state[5] in { d_open, d_opening } ? d_closing : d_closed);
    next(door_state[6]) := open[6] ? (door_state[6] in { d_closed, d_closing } ? d_opening : d_open) : (door_state[6] in { d_open, d_opening } ? d_closing : d_closed);
    next(door_state[7]) := open[7] ? (door_state[7] in { d_closed, d_closing } ? d_opening : d_open) : (door_state[7] in { d_open, d_opening } ? d_closing : d_closed);
    next(door_state[8]) := open[8] ? (door_state[8] in { d_closed, d_closing } ? d_opening : d_open) : (door_state[8] in { d_open, d_opening } ? d_closing : d_closed);
    next(door_state[9]) := open[9] ? (door_state[9] in { d_closed, d_closing } ? d_opening : d_open) : (door_state[9] in { d_open, d_opening } ? d_closing : d_closed);
    next(door_state[10]) := open[10] ? (door_state[10] in { d_closed, d_closing } ? d_opening : d_open) : (door_state[10] in { d_open, d_opening } ? d_closing : d_closed);
    next(door_state[11]) := open[11] ? (door_state[11] in { d_closed, d_closing } ? d_opening : d_open) : (door_state[11] in { d_open, d_opening } ? d_closing : d_closed);
    next(door_state[12]) := open[12] ? (door_state[12] in { d_closed, d_closing } ? d_opening : d_open) : (door_state[12] in { d_open, d_opening } ? d_closing : d_closed);
    next(door_state[13]) := open[13] ? (door_state[13] in { d_closed, d_closing } ? d_opening : d_open) : (door_state[13] in { d_open, d_opening } ? d_closing : d_closed);
    next(door_state[14]) := open[14] ? (door_state[14] in { d_closed, d_closing } ? d_opening : d_open) : (door_state[14] in { d_open, d_opening } ? d_closing : d_closed);
    next(door_state[15]) := open[15] ? (door_state[15] in { d_closed, d_closing } ? d_opening : d_open) : (door_state[15] in { d_open, d_opening } ? d_closing : d_closed);
    next(door_state[16]) := open[16] ? (door_state[16] in { d_closed, d_closing } ? d_opening : d_open) : (door_state[16] in { d_open, d_opening } ? d_closing : d_closed);
    next(door_state[17]) := open[17] ? (door_state[17] in { d_closed, d_closing } ? d_opening : d_open) : (door_state[17] in { d_open, d_opening } ? d_closing : d_closed);
    next(door_state[18]) := open[18] ? (door_state[18] in { d_closed, d_closing } ? d_opening : d_open) : (door_state[18] in { d_open, d_opening } ? d_closing : d_closed);
    next(door_closed[0]) := next(door_state[0]) = d_closed;
    next(door_closed[1]) := next(door_state[1]) = d_closed;
    next(door_closed[2]) := next(door_state[2]) = d_closed;
    next(door_closed[3]) := next(door_state[3]) = d_closed;
    next(door_closed[4]) := next(door_state[4]) = d_closed;
    next(door_closed[5]) := next(door_state[5]) = d_closed;
    next(door_closed[6]) := next(door_state[6]) = d_closed;
    next(door_closed[7]) := next(door_state[7]) = d_closed;
    next(door_closed[8]) := next(door_state[8]) = d_closed;
    next(door_closed[9]) := next(door_state[9]) = d_closed;
    next(door_closed[10]) := next(door_state[10]) = d_closed;
    next(door_closed[11]) := next(door_state[11]) = d_closed;
    next(door_closed[12]) := next(door_state[12]) = d_closed;
    next(door_closed[13]) := next(door_state[13]) = d_closed;
    next(door_closed[14]) := next(door_state[14]) = d_closed;
    next(door_closed[15]) := next(door_state[15]) = d_closed;
    next(door_closed[16]) := next(door_state[16]) = d_closed;
    next(door_closed[17]) := next(door_state[17]) = d_closed;
    next(door_closed[18]) := next(door_state[18]) = d_closed;
    next(door_open[0]) := next(door_state[0]) = d_open;
    next(door_open[1]) := next(door_state[1]) = d_open;
    next(door_open[2]) := next(door_state[2]) = d_open;
    next(door_open[3]) := next(door_state[3]) = d_open;
    next(door_open[4]) := next(door_state[4]) = d_open;
    next(door_open[5]) := next(door_state[5]) = d_open;
    next(door_open[6]) := next(door_state[6]) = d_open;
    next(door_open[7]) := next(door_state[7]) = d_open;
    next(door_open[8]) := next(door_state[8]) = d_open;
    next(door_open[9]) := next(door_state[9]) = d_open;
    next(door_open[10]) := next(door_state[10]) = d_open;
    next(door_open[11]) := next(door_state[11]) = d_open;
    next(door_open[12]) := next(door_state[12]) = d_open;
    next(door_open[13]) := next(door_state[13]) = d_open;
    next(door_open[14]) := next(door_state[14]) = d_open;
    next(door_open[15]) := next(door_state[15]) = d_open;
    next(door_open[16]) := next(door_state[16]) = d_open;
    next(door_open[17]) := next(door_state[17]) = d_open;
    next(door_open[18]) := next(door_state[18]) = d_open;
    next(button[0]) := (next(on_floor[0]) & next(door_open[0])) ? FALSE : next(user_floor_button[0]) ? TRUE : button[0];
    next(button[1]) := (next(on_floor[1]) & next(door_open[1])) ? FALSE : next(user_floor_button[1]) ? TRUE : button[1];
    next(button[2]) := (next(on_floor[2]) & next(door_open[2])) ? FALSE : next(user_floor_button[2]) ? TRUE : button[2];
    next(button[3]) := (next(on_floor[3]) & next(door_open[3])) ? FALSE : next(user_floor_button[3]) ? TRUE : button[3];
    next(button[4]) := (next(on_floor[4]) & next(door_open[4])) ? FALSE : next(user_floor_button[4]) ? TRUE : button[4];
    next(button[5]) := (next(on_floor[5]) & next(door_open[5])) ? FALSE : next(user_floor_button[5]) ? TRUE : button[5];
    next(button[6]) := (next(on_floor[6]) & next(door_open[6])) ? FALSE : next(user_floor_button[6]) ? TRUE : button[6];
    next(button[7]) := (next(on_floor[7]) & next(door_open[7])) ? FALSE : next(user_floor_button[7]) ? TRUE : button[7];
    next(button[8]) := (next(on_floor[8]) & next(door_open[8])) ? FALSE : next(user_floor_button[8]) ? TRUE : button[8];
    next(button[9]) := (next(on_floor[9]) & next(door_open[9])) ? FALSE : next(user_floor_button[9]) ? TRUE : button[9];
    next(button[10]) := (next(on_floor[10]) & next(door_open[10])) ? FALSE : next(user_floor_button[10]) ? TRUE : button[10];
    next(button[11]) := (next(on_floor[11]) & next(door_open[11])) ? FALSE : next(user_floor_button[11]) ? TRUE : button[11];
    next(button[12]) := (next(on_floor[12]) & next(door_open[12])) ? FALSE : next(user_floor_button[12]) ? TRUE : button[12];
    next(button[13]) := (next(on_floor[13]) & next(door_open[13])) ? FALSE : next(user_floor_button[13]) ? TRUE : button[13];
    next(button[14]) := (next(on_floor[14]) & next(door_open[14])) ? FALSE : next(user_floor_button[14]) ? TRUE : button[14];
    next(button[15]) := (next(on_floor[15]) & next(door_open[15])) ? FALSE : next(user_floor_button[15]) ? TRUE : button[15];
    next(button[16]) := (next(on_floor[16]) & next(door_open[16])) ? FALSE : next(user_floor_button[16]) ? TRUE : button[16];
    next(button[17]) := (next(on_floor[17]) & next(door_open[17])) ? FALSE : next(user_floor_button[17]) ? TRUE : button[17];
    next(button[18]) := (next(on_floor[18]) & next(door_open[18])) ? FALSE : next(user_floor_button[18]) ? TRUE : button[18];
    next(call[0]) := (next(on_floor[0]) & next(door_open[0])) ? FALSE : next(user_cabin_button[0]) ? TRUE : call[0];
    next(call[1]) := (next(on_floor[1]) & next(door_open[1])) ? FALSE : next(user_cabin_button[1]) ? TRUE : call[1];
    next(call[2]) := (next(on_floor[2]) & next(door_open[2])) ? FALSE : next(user_cabin_button[2]) ? TRUE : call[2];
    next(call[3]) := (next(on_floor[3]) & next(door_open[3])) ? FALSE : next(user_cabin_button[3]) ? TRUE : call[3];
    next(call[4]) := (next(on_floor[4]) & next(door_open[4])) ? FALSE : next(user_cabin_button[4]) ? TRUE : call[4];
    next(call[5]) := (next(on_floor[5]) & next(door_open[5])) ? FALSE : next(user_cabin_button[5]) ? TRUE : call[5];
    next(call[6]) := (next(on_floor[6]) & next(door_open[6])) ? FALSE : next(user_cabin_button[6]) ? TRUE : call[6];
    next(call[7]) := (next(on_floor[7]) & next(door_open[7])) ? FALSE : next(user_cabin_button[7]) ? TRUE : call[7];
    next(call[8]) := (next(on_floor[8]) & next(door_open[8])) ? FALSE : next(user_cabin_button[8]) ? TRUE : call[8];
    next(call[9]) := (next(on_floor[9]) & next(door_open[9])) ? FALSE : next(user_cabin_button[9]) ? TRUE : call[9];
    next(call[10]) := (next(on_floor[10]) & next(door_open[10])) ? FALSE : next(user_cabin_button[10]) ? TRUE : call[10];
    next(call[11]) := (next(on_floor[11]) & next(door_open[11])) ? FALSE : next(user_cabin_button[11]) ? TRUE : call[11];
    next(call[12]) := (next(on_floor[12]) & next(door_open[12])) ? FALSE : next(user_cabin_button[12]) ? TRUE : call[12];
    next(call[13]) := (next(on_floor[13]) & next(door_open[13])) ? FALSE : next(user_cabin_button[13]) ? TRUE : call[13];
    next(call[14]) := (next(on_floor[14]) & next(door_open[14])) ? FALSE : next(user_cabin_button[14]) ? TRUE : call[14];
    next(call[15]) := (next(on_floor[15]) & next(door_open[15])) ? FALSE : next(user_cabin_button[15]) ? TRUE : call[15];
    next(call[16]) := (next(on_floor[16]) & next(door_open[16])) ? FALSE : next(user_cabin_button[16]) ? TRUE : call[16];
    next(call[17]) := (next(on_floor[17]) & next(door_open[17])) ? FALSE : next(user_cabin_button[17]) ? TRUE : call[17];
    next(call[18]) := (next(on_floor[18]) & next(door_open[18])) ? FALSE : next(user_cabin_button[18]) ? TRUE : call[18];
DEFINE
    elevator_pos1 := elevator_pos + (up ? 1 : 0) - (down ? 1 : 0);
    elevator_pos2 := elevator_pos1 > 3 * (FLOORS - 1) ? 3 * (FLOORS - 1) : elevator_pos1;
    elevator_pos3 := elevator_pos2 < 0 ? 0 : elevator_pos2;
