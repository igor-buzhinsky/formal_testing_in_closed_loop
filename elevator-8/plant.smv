ASSIGN
    next(elevator_pos) := elevator_pos3;
    next(on_floor[0]) := next(elevator_pos) = 3 * 0;
    next(on_floor[1]) := next(elevator_pos) = 3 * 1;
    next(on_floor[2]) := next(elevator_pos) = 3 * 2;
    next(on_floor[3]) := next(elevator_pos) = 3 * 3;
    next(on_floor[4]) := next(elevator_pos) = 3 * 4;
    next(on_floor[5]) := next(elevator_pos) = 3 * 5;
    next(on_floor[6]) := next(elevator_pos) = 3 * 6;
    next(on_floor[7]) := next(elevator_pos) = 3 * 7;
    next(door_state[0]) := open[0] ? (door_state[0] in { d_closed, d_closing } ? d_opening : d_open) : (door_state[0] in { d_open, d_opening } ? d_closing : d_closed);
    next(door_state[1]) := open[1] ? (door_state[1] in { d_closed, d_closing } ? d_opening : d_open) : (door_state[1] in { d_open, d_opening } ? d_closing : d_closed);
    next(door_state[2]) := open[2] ? (door_state[2] in { d_closed, d_closing } ? d_opening : d_open) : (door_state[2] in { d_open, d_opening } ? d_closing : d_closed);
    next(door_state[3]) := open[3] ? (door_state[3] in { d_closed, d_closing } ? d_opening : d_open) : (door_state[3] in { d_open, d_opening } ? d_closing : d_closed);
    next(door_state[4]) := open[4] ? (door_state[4] in { d_closed, d_closing } ? d_opening : d_open) : (door_state[4] in { d_open, d_opening } ? d_closing : d_closed);
    next(door_state[5]) := open[5] ? (door_state[5] in { d_closed, d_closing } ? d_opening : d_open) : (door_state[5] in { d_open, d_opening } ? d_closing : d_closed);
    next(door_state[6]) := open[6] ? (door_state[6] in { d_closed, d_closing } ? d_opening : d_open) : (door_state[6] in { d_open, d_opening } ? d_closing : d_closed);
    next(door_state[7]) := open[7] ? (door_state[7] in { d_closed, d_closing } ? d_opening : d_open) : (door_state[7] in { d_open, d_opening } ? d_closing : d_closed);
    next(door_closed[0]) := next(door_state[0]) = d_closed;
    next(door_closed[1]) := next(door_state[1]) = d_closed;
    next(door_closed[2]) := next(door_state[2]) = d_closed;
    next(door_closed[3]) := next(door_state[3]) = d_closed;
    next(door_closed[4]) := next(door_state[4]) = d_closed;
    next(door_closed[5]) := next(door_state[5]) = d_closed;
    next(door_closed[6]) := next(door_state[6]) = d_closed;
    next(door_closed[7]) := next(door_state[7]) = d_closed;
    next(door_open[0]) := next(door_state[0]) = d_open;
    next(door_open[1]) := next(door_state[1]) = d_open;
    next(door_open[2]) := next(door_state[2]) = d_open;
    next(door_open[3]) := next(door_state[3]) = d_open;
    next(door_open[4]) := next(door_state[4]) = d_open;
    next(door_open[5]) := next(door_state[5]) = d_open;
    next(door_open[6]) := next(door_state[6]) = d_open;
    next(door_open[7]) := next(door_state[7]) = d_open;
    next(button[0]) := (next(on_floor[0]) & next(door_open[0])) ? FALSE : next(user_floor_button[0]) ? TRUE : button[0];
    next(button[1]) := (next(on_floor[1]) & next(door_open[1])) ? FALSE : next(user_floor_button[1]) ? TRUE : button[1];
    next(button[2]) := (next(on_floor[2]) & next(door_open[2])) ? FALSE : next(user_floor_button[2]) ? TRUE : button[2];
    next(button[3]) := (next(on_floor[3]) & next(door_open[3])) ? FALSE : next(user_floor_button[3]) ? TRUE : button[3];
    next(button[4]) := (next(on_floor[4]) & next(door_open[4])) ? FALSE : next(user_floor_button[4]) ? TRUE : button[4];
    next(button[5]) := (next(on_floor[5]) & next(door_open[5])) ? FALSE : next(user_floor_button[5]) ? TRUE : button[5];
    next(button[6]) := (next(on_floor[6]) & next(door_open[6])) ? FALSE : next(user_floor_button[6]) ? TRUE : button[6];
    next(button[7]) := (next(on_floor[7]) & next(door_open[7])) ? FALSE : next(user_floor_button[7]) ? TRUE : button[7];
    next(call[0]) := (next(on_floor[0]) & next(door_open[0])) ? FALSE : next(user_cabin_button[0]) ? TRUE : call[0];
    next(call[1]) := (next(on_floor[1]) & next(door_open[1])) ? FALSE : next(user_cabin_button[1]) ? TRUE : call[1];
    next(call[2]) := (next(on_floor[2]) & next(door_open[2])) ? FALSE : next(user_cabin_button[2]) ? TRUE : call[2];
    next(call[3]) := (next(on_floor[3]) & next(door_open[3])) ? FALSE : next(user_cabin_button[3]) ? TRUE : call[3];
    next(call[4]) := (next(on_floor[4]) & next(door_open[4])) ? FALSE : next(user_cabin_button[4]) ? TRUE : call[4];
    next(call[5]) := (next(on_floor[5]) & next(door_open[5])) ? FALSE : next(user_cabin_button[5]) ? TRUE : call[5];
    next(call[6]) := (next(on_floor[6]) & next(door_open[6])) ? FALSE : next(user_cabin_button[6]) ? TRUE : call[6];
    next(call[7]) := (next(on_floor[7]) & next(door_open[7])) ? FALSE : next(user_cabin_button[7]) ? TRUE : call[7];
DEFINE
    elevator_pos1 := elevator_pos + (up ? 1 : 0) - (down ? 1 : 0);
    elevator_pos2 := elevator_pos1 > 3 * (FLOORS - 1) ? 3 * (FLOORS - 1) : elevator_pos1;
    elevator_pos3 := elevator_pos2 < 0 ? 0 : elevator_pos2;
